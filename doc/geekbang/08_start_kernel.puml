@startuml
:start_kernel
内核启动;
note left
在init/main.c中
end note
:INIT_TASK(init_task);
note right
创建0号进程
唯一一个没有通过 fork 或者 kernel_thread 产生的进程
end note
:trap_init();
note left
用于响应各种中断
end note
:mm_init();
note right
初始化内存管理模块
end note
:sched_init;
note left
初始化调度模块
end note
:     rest_init
其他模块初始化;
fork
:kernel_thread(kernel_init, NULL, CLONE_FS)
一号进程init，用户态进程祖先;
note left
内核中准备好用户态寄存器
end note
fork again
:kernel_thread(kthreadd, NULL, CLONE_FS | CLONE_FILES)
二号进程，内核态进程祖先;
end fork
@enduml